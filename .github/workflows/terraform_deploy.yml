name: Deploy Terraform Infrastructure
on:
  push:
    branches:
      - '**'
    paths:
      - 'task2/infra/**'
      - '.github/workflows/terraform_deploy.yml'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.0"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Terraform Init
        run: terraform init
        env:
          AWS_REGION: "eu-west-1"
        working-directory: task2/infra

      - name: Terraform Validate
        run: terraform validate
        working-directory: task2/infra

      - name: Create terraform_plan Directory
        run: |
          mkdir -p task2/terraform_plan

      - name: Terraform Plan
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/master" ]; then
            echo "Running plan for production environment"
            export TF_VAR_environment="prod"
          else
            echo "Running plan for development environment"
            export TF_VAR_environment="dev"
          fi
          terraform plan -input=false -no-color -out=../terraform_plan/tfplan.binary
          terraform show -json ../terraform_plan/tfplan.binary > ../terraform_plan/tfplan.json
          cat ../terraform_plan/tfplan.json | jq '.' > ../terraform_plan/formatted_plan.json
        env:
          AWS_REGION: "eu-west-1"
          TF_VAR_prefix: "63"
          TF_VAR_bucket_name: "pgr301-couch-explorers"
        working-directory: task2/infra

      - name: Archive Terraform Plan Binary
        uses: actions/upload-artifact@v4
        id: upload-plan-binary
        with:
          name: terraform-plan-binary
          path: task2/terraform_plan/tfplan.binary
          retention-days: 5

      - name: Archive Terraform Plan JSON
        uses: actions/upload-artifact@v4
        id: upload-plan-json
        with:
          name: terraform-plan-json
          path: task2/terraform_plan/tfplan.json
          retention-days: 5

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master'
        run: terraform apply -auto-approve task2/terraform_plan/tfplan.binary
        env:
          AWS_REGION: "eu-west-1"
        working-directory: task2/infra

      - name: Job Summary
        run: |
          BINARY_URL="https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/artifacts/${{ steps.upload-plan-binary.outputs.artifact-id }}"
          JSON_URL="https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/artifacts/${{ steps.upload-plan-json.outputs.artifact-id }}"
          WORKFLOW_URL="https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
          echo "## Summary" >> $GITHUB_STEP_SUMMARY
          if [ "${GITHUB_REF}" = "refs/heads/master" ]; then
            echo Enviroment: production >> $GITHUB_STEP_SUMMARY
          else
            echo Enviroment: development >> $GITHUB_STEP_SUMMARY
          fi
          echo "Branch: ${GITHUB_REF#refs/heads/}" >> $GITHUB_STEP_SUMMARY
          if [ "${GITHUB_REF}" = "refs/heads/master" ]; then
            echo "✅ Plan created" >> $GITHUB_STEP_SUMMARY
            echo "✅ Plan applied" >> $GITHUB_STEP_SUMMARY
            echo "✅ Plan archived" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ Plan created" >> $GITHUB_STEP_SUMMARY
            echo "❌ Plan applied" >> $GITHUB_STEP_SUMMARY
            echo "✅ Plan archived" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- 🔗 [Workflow Run](${WORKFLOW_URL})" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 [Download Binary Plan](${BINARY_URL})" >> $GITHUB_STEP_SUMMARY
          echo "- 📄 [Download JSON Plan](${JSON_URL})" >> $GITHUB_STEP_SUMMARY